name: Deploy Java App to AWS ASG
'on':
  workflow_dispatch: null
  push:
    branches:
      - main
jobs:
  Build:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Install Maven 3.3
        run: |
          sudo yum update -y
          sudo yum update -y
          sudo yum install maven -y
          mvn -version
      - name: Build Java Application
        run: |
          mvn clean package
          pwd
      - name: Cache Maven Dependencies
        id: maven-cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: Maven-Cache-self-hosted
          restore-keys: Maven-Cache-self-hosted

  Docker-Build-Push:
       runs-on: self-hosted
       needs: [ Build ]
       steps:      
          - name: aws cred
            uses: aws-actions/configure-aws-credentials@v3
            with:
                 aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
                 aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
                 aws-region: '${{ secrets.AWS_REGION }}'

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Get commit hash
            id: get-commit-hash
            run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
          - name: Get timestamp
            id: get-timestamp
            run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

          - name: Build, tag, and push the image to Amazon ECR
            id: build-image
            env:
              ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
              ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
              IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
            run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
