name: Deploy Java App to AWS ASG

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # # Step 2: Cache Maven dependencies
    # - name: Cache Maven Dependencies
    #   uses: actions/cache@v2
    #   with:
    #       path: ~/.m2/repository
    #       key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    #       restore-keys: |
    #         maven-${{ runner.os }}-  

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17' # Adjust based on your application's requirements
    
    - name: Install Maven 3.3
      run: |
        sudo yum update -y
        sudo yum update -y
        sudo yum install maven -y
        mvn -version
        
    - name: Build Java Application
      run: |
        mvn clean package
        pwd

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.AWS_REGION }}
         
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - uses: actions/checkout@v3
      with:      
           token: ${{ secrets.GH_PAT_GA }}
      
    - name: Buid and Push Docker   
      run:  | 
              pwd
               docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
               docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      env:
          REGISTRY: ${{ env.ECR_REGISTRY }}
          REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_number }}
          # REGISTRY: ${{ steps.login-ecr.outputs.registry }}  
